
package pl.lodz.p.tks.user.soapadapters.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "UserAdapterService", targetNamespace = "http://adapters.soapadapters.tks.p.lodz.pl/", wsdlLocation = "http://localhost:8080/Soap/UserAdapterService?wsdl")
public class UserAdapterService
    extends Service
{

    private final static URL USERADAPTERSERVICE_WSDL_LOCATION;
    private final static WebServiceException USERADAPTERSERVICE_EXCEPTION;
    private final static QName USERADAPTERSERVICE_QNAME = new QName("http://adapters.soapadapters.tks.p.lodz.pl/", "UserAdapterService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/Soap/UserAdapterService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        USERADAPTERSERVICE_WSDL_LOCATION = url;
        USERADAPTERSERVICE_EXCEPTION = e;
    }

    public UserAdapterService() {
        super(__getWsdlLocation(), USERADAPTERSERVICE_QNAME);
    }

    public UserAdapterService(WebServiceFeature... features) {
        super(__getWsdlLocation(), USERADAPTERSERVICE_QNAME, features);
    }

    public UserAdapterService(URL wsdlLocation) {
        super(wsdlLocation, USERADAPTERSERVICE_QNAME);
    }

    public UserAdapterService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, USERADAPTERSERVICE_QNAME, features);
    }

    public UserAdapterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserAdapterService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IUserAdapter
     */
    @WebEndpoint(name = "UserAdapterPort")
    public IUserAdapter getUserAdapterPort() {
        return super.getPort(new QName("http://adapters.soapadapters.tks.p.lodz.pl/", "UserAdapterPort"), IUserAdapter.class);
    }

    /**
     * 
     * @param features
     *     A list of {&#064;link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the &lt;code&gt;features&lt;/code&gt; parameter will have their default values.
     * @return
     *     returns IUserAdapter
     */
    @WebEndpoint(name = "UserAdapterPort")
    public IUserAdapter getUserAdapterPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://adapters.soapadapters.tks.p.lodz.pl/", "UserAdapterPort"), IUserAdapter.class, features);
    }

    private static URL __getWsdlLocation() {
        if (USERADAPTERSERVICE_EXCEPTION!= null) {
            throw USERADAPTERSERVICE_EXCEPTION;
        }
        return USERADAPTERSERVICE_WSDL_LOCATION;
    }

}
